# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/sendgrid-ruby/all/sendgrid-ruby.rbi
#
# sendgrid-ruby-6.0.0
module SendGrid
end
class SendGrid::API
  def client; end
  def client=(arg0); end
  def host; end
  def impersonate_subuser; end
  def initialize(api_key: nil, host: nil, request_headers: nil, version: nil, impersonate_subuser: nil); end
  def request_headers; end
  def version; end
end
class SendGrid::IpManagement
  def initialize(sendgrid_client:); end
  def sendgrid_client; end
  def sendgrid_client=(arg0); end
  def unassigned; end
end
class SendGrid::ASM
  def group_id; end
  def group_id=(group_id); end
  def groups_to_display; end
  def groups_to_display=(groups_to_display); end
  def initialize(group_id: nil, groups_to_display: nil); end
  def to_json(*arg0); end
end
class SendGrid::Attachment
  def content; end
  def content=(content); end
  def content_id; end
  def content_id=(content_id); end
  def disposition; end
  def disposition=(disposition); end
  def encode(io); end
  def filename; end
  def filename=(filename); end
  def initialize; end
  def to_json(*arg0); end
  def type; end
  def type=(type); end
end
class SendGrid::BccSettings
  def email; end
  def email=(email); end
  def enable; end
  def enable=(enable); end
  def initialize(enable: nil, email: nil); end
  def to_json(*arg0); end
end
class SendGrid::BypassListManagement
  def enable; end
  def enable=(enable); end
  def initialize(enable: nil); end
  def to_json(*arg0); end
end
class SendGrid::SandBoxMode
  def enable; end
  def enable=(enable); end
  def initialize(enable: nil); end
  def to_json(*arg0); end
end
class SendGrid::Category
  def category; end
  def category=(arg0); end
  def initialize(name: nil); end
  def name; end
  def name=(arg0); end
  def to_json(*arg0); end
end
class SendGrid::ClickTracking
  def enable; end
  def enable=(enable); end
  def enable_text; end
  def enable_text=(enable_text); end
  def initialize(enable: nil, enable_text: nil); end
  def to_json(*arg0); end
end
class SendGrid::Content
  def initialize(type: nil, value: nil); end
  def to_json(*arg0); end
  def type; end
  def type=(arg0); end
  def value; end
  def value=(arg0); end
end
class SendGrid::CustomArg
  def custom_arg; end
  def custom_arg=(custom_arg); end
  def initialize(key: nil, value: nil); end
  def to_json(*arg0); end
end
class SendGrid::Email
  def email; end
  def email=(arg0); end
  def initialize(email: nil, name: nil); end
  def name; end
  def name=(arg0); end
  def split_email(email); end
  def to_json(*arg0); end
end
class SendGrid::Footer
  def enable; end
  def enable=(enable); end
  def html; end
  def html=(html); end
  def initialize(enable: nil, text: nil, html: nil); end
  def text; end
  def text=(text); end
  def to_json(*arg0); end
end
class SendGrid::Ganalytics
  def enable; end
  def enable=(enable); end
  def initialize(enable: nil, utm_source: nil, utm_medium: nil, utm_term: nil, utm_content: nil, utm_campaign: nil, utm_name: nil); end
  def to_json(*arg0); end
  def utm_campaign; end
  def utm_campaign=(utm_campaign); end
  def utm_content; end
  def utm_content=(utm_content); end
  def utm_medium; end
  def utm_medium=(utm_medium); end
  def utm_source; end
  def utm_source=(utm_source); end
  def utm_term; end
  def utm_term=(utm_term); end
end
class SendGrid::Header
  def header; end
  def header=(header); end
  def initialize(key: nil, value: nil); end
  def to_json(*arg0); end
end
class SendGrid::Mail
  def add_attachment(attachment); end
  def add_category(category); end
  def add_content(content); end
  def add_custom_arg(custom_arg); end
  def add_header(header); end
  def add_personalization(personalization); end
  def add_section(section); end
  def asm; end
  def asm=(asm); end
  def attachments; end
  def batch_id; end
  def batch_id=(arg0); end
  def categories; end
  def check_for_secrets(patterns); end
  def contents; end
  def custom_args; end
  def from; end
  def from=(from); end
  def headers; end
  def initialize(from_email = nil, subj = nil, to_email = nil, cont = nil); end
  def ip_pool_name; end
  def ip_pool_name=(arg0); end
  def mail_settings; end
  def mail_settings=(mail_settings); end
  def personalizations; end
  def reply_to; end
  def reply_to=(reply_to); end
  def sections; end
  def send_at; end
  def send_at=(arg0); end
  def subject; end
  def subject=(arg0); end
  def template_id; end
  def template_id=(arg0); end
  def to_json(*arg0); end
  def tracking_settings; end
  def tracking_settings=(tracking_settings); end
end
class SendGrid::MailSettings
  def bcc; end
  def bcc=(bcc); end
  def bypass_list_management; end
  def bypass_list_management=(bypass_list_management); end
  def footer; end
  def footer=(footer); end
  def initialize; end
  def sandbox_mode; end
  def sandbox_mode=(sandbox_mode); end
  def spam_check; end
  def spam_check=(spam_check); end
  def to_json(*arg0); end
end
class SendGrid::OpenTracking
  def enable; end
  def enable=(enable); end
  def initialize(enable: nil, substitution_tag: nil); end
  def substitution_tag; end
  def substitution_tag=(substitution_tag); end
  def to_json(*arg0); end
end
class SendGrid::Personalization
  def add_bcc(bcc); end
  def add_cc(cc); end
  def add_custom_arg(custom_arg); end
  def add_dynamic_template_data(dynamic_template_data); end
  def add_header(header); end
  def add_substitution(substitution); end
  def add_to(to); end
  def bccs; end
  def ccs; end
  def custom_args; end
  def dynamic_template_data; end
  def headers; end
  def initialize; end
  def send_at; end
  def send_at=(send_at); end
  def subject; end
  def subject=(subject); end
  def substitutions; end
  def to_json(*arg0); end
  def tos; end
end
class SendGrid::Section
  def initialize(key: nil, value: nil); end
  def section; end
  def section=(section); end
  def to_json(*arg0); end
end
class SendGrid::SpamCheck
  def enable; end
  def enable=(enable); end
  def initialize(enable: nil, threshold: nil, post_to_url: nil); end
  def post_to_url; end
  def post_to_url=(post_to_url); end
  def threshold; end
  def threshold=(threshold); end
  def to_json(*arg0); end
end
class SendGrid::SubscriptionTracking
  def enable; end
  def enable=(enable); end
  def html; end
  def html=(html); end
  def initialize(enable: nil, text: nil, html: nil, substitution_tag: nil); end
  def substitution_tag; end
  def substitution_tag=(substitution_tag); end
  def text; end
  def text=(text); end
  def to_json(*arg0); end
end
class SendGrid::Substitution
  def initialize(key: nil, value: nil); end
  def substitution; end
  def substitution=(substitution); end
  def to_json(*arg0); end
end
class SendGrid::TrackingSettings
  def click_tracking; end
  def click_tracking=(click_tracking); end
  def ganalytics; end
  def ganalytics=(ganalytics); end
  def initialize; end
  def open_tracking; end
  def open_tracking=(open_tracking); end
  def subscription_tracking; end
  def subscription_tracking=(subscription_tracking); end
  def to_json(*arg0); end
end
class SendGrid::MailSettingsDto
  def address_whitelist; end
  def bcc; end
  def bounce_purge; end
  def footer; end
  def forward_bounce; end
  def forward_spam; end
  def plain_content; end
  def self.fetch(sendgrid_client:, name:, query_params:); end
  def self.update(sendgrid_client:, name:, request_body:); end
  def spam_check; end
  def template; end
end
class SendGrid::PartnerSettingsDto
  def new_relic; end
  def self.fetch(sendgrid_client:, name:, query_params:); end
  def self.update(sendgrid_client:, name:, request_body:); end
end
class SendGrid::TrackingSettingsDto
  def click; end
  def click_tracking; end
  def google_analytics; end
  def open; end
  def open_tracking; end
  def self.fetch(sendgrid_client:, name:, query_params:); end
  def self.scrub_alias_names(name); end
  def self.update(sendgrid_client:, name:, request_body:); end
  def subscription; end
  def subscription_tracking; end
end
class SendGrid::UserSettingsDto
  def enforced_tls; end
  def self.fetch(sendgrid_client:, name:, query_params:); end
  def self.update(sendgrid_client:, name:, request_body:); end
end
class SendGrid::Settings
  def address_whitelist(**args); end
  def bcc(**args); end
  def bounce_purge(**args); end
  def click(**args); end
  def click_tracking(**args); end
  def enforced_tls(**args); end
  def footer(**args); end
  def forward_bounce(**args); end
  def forward_spam(**args); end
  def google_analytics(**args); end
  def initialize(sendgrid_client:); end
  def new_relic(**args); end
  def open(**args); end
  def open_tracking(**args); end
  def plain_content(**args); end
  def sendgrid_client; end
  def sendgrid_client=(arg0); end
  def spam_check(**args); end
  def subscription(**args); end
  def subscription_tracking(**args); end
  def template(**args); end
  def update_address_whitelist(**args); end
  def update_bcc(**args); end
  def update_bounce_purge(**args); end
  def update_click(**args); end
  def update_click_tracking(**args); end
  def update_enforced_tls(**args); end
  def update_footer(**args); end
  def update_forward_bounce(**args); end
  def update_forward_spam(**args); end
  def update_google_analytics(**args); end
  def update_new_relic(**args); end
  def update_open(**args); end
  def update_open_tracking(**args); end
  def update_plain_content(**args); end
  def update_spam_check(**args); end
  def update_subscription(**args); end
  def update_subscription_tracking(**args); end
  def update_template(**args); end
end
class SendGrid::EmailStats
  def build_response(response_body); end
  def by_day(start_date, end_date, categories = nil, subusers = nil); end
  def by_month(start_date, end_date, categories = nil, subusers = nil); end
  def by_week(start_date, end_date, categories = nil, subusers = nil); end
  def get(aggregated_by, start_date, end_date, categories = nil, subusers = nil); end
  def initialize(args); end
  def query_params(aggregated_by, start_date, end_date, categories, subusers); end
end
class SendGrid::StatsResponse
  def error?; end
  def errors; end
  def initialize(args); end
  def metrics; end
end
class SendGrid::Metrics
  def blocks; end
  def bounce_drops; end
  def bounces; end
  def clicks; end
  def date; end
  def deferred; end
  def delivered; end
  def initialize(args = nil); end
  def invalid_emails; end
  def opens; end
  def processed; end
  def requests; end
  def spam_report_drops; end
  def spam_reports; end
  def unique_clicks; end
  def unique_opens; end
  def unsubscribe_drops; end
  def unsubscribes; end
end
class SendGrid::Scope
  def self.access_settings_full_access_permissions; end
  def self.access_settings_read_only_permissions; end
  def self.admin_permissions; end
  def self.alerts_full_access_permissions; end
  def self.alerts_read_only_permissions; end
  def self.api_keys_full_access_permissions; end
  def self.api_keys_read_only_permissions; end
  def self.asm_groups_full_access_permissions; end
  def self.asm_groups_read_only_permissions; end
  def self.billing_full_access_permissions; end
  def self.billing_read_only_permissions; end
  def self.categories_full_access_permissions; end
  def self.categories_read_only_permissions; end
  def self.credentials_full_access_permissions; end
  def self.credentials_read_only_permissions; end
  def self.ips_full_access_permissions; end
  def self.ips_read_only_permissions; end
  def self.mail_full_access_permissions; end
  def self.mail_read_only_permissions; end
  def self.mail_settings_full_access_permissions; end
  def self.mail_settings_read_only_permissions; end
  def self.marketing_campaigns_full_access_permissions; end
  def self.marketing_campaigns_read_only_permissions; end
  def self.partner_settings_full_access_permissions; end
  def self.partner_settings_read_only_permissions; end
  def self.read_only_permissions; end
  def self.scheduled_sends_full_access_permissions; end
  def self.scheduled_sends_read_only_permissions; end
  def self.stats_full_access_permissions; end
  def self.stats_read_only_permissions; end
  def self.subusers_full_access_permissions; end
  def self.subusers_read_only_permissions; end
  def self.suppression_full_access_permissions; end
  def self.suppression_read_only_permissions; end
  def self.teammates_full_access_permissions; end
  def self.teammates_read_only_permissions; end
  def self.templates_full_access_permissions; end
  def self.templates_read_only_permissions; end
  def self.tracking_settings_full_access_permissions; end
  def self.tracking_settings_read_only_permissions; end
  def self.user_settings_full_access_permissions; end
  def self.user_settings_read_only_permissions; end
  def self.webhooks_full_access_permissions; end
  def self.webhooks_read_only_permissions; end
  def self.whitelabel_full_access_permissions; end
  def self.whitelabel_read_only_permissions; end
end
