# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/suspenders/all/suspenders.rbi
#
# suspenders-1.52.0
module Suspenders
end
class Suspenders::AppGenerator < Rails::Generators::AppGenerator
  def self.banner; end
end
module Suspenders::Actions
  def action_mailer_asset_host(rails_env, host); end
  def action_mailer_host(rails_env, host); end
  def configure_environment(rails_env, config); end
  def expand_json(file, data); end
  def replace_in_file(relative_path, find, replace); end
end
class Suspenders::Actions::ExpandJson
  def data; end
  def destination_file; end
  def destination_root; end
  def existing_json; end
  def file; end
  def hash_unmerge(hash, subhash); end
  def initialize(destination_root, file, data); end
  def invoke!; end
  def revoke!; end
  def write_out; end
end
module Suspenders::Generators
end
class Suspenders::Generators::Base < Rails::Generators::Base
  def self.default_source_root; end
  include Suspenders::Actions
end
class Suspenders::StaticGenerator < Suspenders::Generators::Base
end
class Suspenders::StylesheetBaseGenerator < Suspenders::Generators::Base
end
class Suspenders::StylelintGenerator < Suspenders::Generators::Base
end
class Suspenders::StylelintGenerator::InvokeGenerator
  def initialize(base, generator); end
  def invoke!; end
  def revoke!; end
end
class Suspenders::StylelintGenerator::ToggleComments
  def initialize(base, filename, pattern); end
  def invoke!; end
  def revoke!; end
end
class Suspenders::StylelintGenerator::YarnInstall
  def initialize(base, dependencies, flags); end
  def invoke!; end
  def revoke!; end
end
class Suspenders::FormsGenerator < Suspenders::Generators::Base
end
class Suspenders::CiGenerator < Suspenders::Generators::Base
end
class Suspenders::DbOptimizationsGenerator < Suspenders::Generators::Base
end
class Suspenders::FactoriesGenerator < Suspenders::Generators::Base
end
class Suspenders::LintGenerator < Suspenders::Generators::Base
end
class Suspenders::JobsGenerator < Suspenders::Generators::Base
end
class Suspenders::AnalyticsGenerator < Suspenders::Generators::Base
end
class Suspenders::ViewsGenerator < Suspenders::Generators::Base
end
class Suspenders::JsDriverGenerator < Suspenders::Generators::Base
end
class Suspenders::JsonGenerator < Suspenders::Generators::Base
end
class Suspenders::TestingGenerator < Suspenders::Generators::Base
end
module Suspenders::Production
end
class Suspenders::Production::ForceTlsGenerator < Suspenders::Generators::Base
end
class Suspenders::Production::EmailGenerator < Suspenders::Generators::Base
end
class Suspenders::Production::TimeoutGenerator < Suspenders::Generators::Base
end
class Suspenders::Production::DeploymentGenerator < Suspenders::Generators::Base
end
class Suspenders::Production::ManifestGenerator < Suspenders::Generators::Base
end
module Suspenders::Staging
end
class Suspenders::Staging::PullRequestsGenerator < Suspenders::Generators::Base
end
module Suspenders::Adapters
end
class Suspenders::Adapters::Heroku
  def app_builder; end
  def command_to_join_heroku_app(environment); end
  def create_heroku_pipeline; end
  def create_production_heroku_app(flags); end
  def create_staging_heroku_app(flags); end
  def generate_secret; end
  def heroku_app_name; end
  def heroku_app_name_for(environment); end
  def initialize(app_builder); end
  def run_toolbelt_command(command, environment); end
  def set_heroku_application_host; end
  def set_heroku_backup_schedule; end
  def set_heroku_honeybadger_env; end
  def set_heroku_rails_secrets; end
  def set_heroku_remotes; end
end
class Suspenders::AppBuilder < Rails::AppBuilder
  def configure_action_mailer; end
  def configure_action_mailer_in_specs; end
  def configure_automatic_deployment; end
  def configure_generators; end
  def configure_i18n_for_missing_translations; end
  def configure_local_mail; end
  def configure_quiet_assets; end
  def configure_time_formats; end
  def copy_dotfiles; end
  def copy_miscellaneous_files; end
  def create_database; end
  def create_github_repo(repo_name); end
  def create_heroku_apps(flags); end
  def create_heroku_pipeline(*args, &block); end
  def create_production_heroku_app(*args, &block); end
  def create_staging_heroku_app(*args, &block); end
  def customize_error_pages; end
  def disallow_wrapping_parameters; end
  def enable_rack_canonical_host; end
  def enable_rack_deflater; end
  def gemfile; end
  def gitignore; end
  def heroku_adapter; end
  def provide_setup_script; end
  def raise_on_delivery_errors; end
  def raise_on_missing_assets_in_test; end
  def raise_on_missing_translations_in(environment); end
  def raise_on_unpermitted_parameters; end
  def readme; end
  def remove_config_comment_lines; end
  def remove_routes_comment_lines; end
  def replace_default_puma_configuration; end
  def replace_gemfile(path); end
  def ruby_version; end
  def set_heroku_application_host(*args, &block); end
  def set_heroku_backup_schedule(*args, &block); end
  def set_heroku_honeybadger_env(*args, &block); end
  def set_heroku_rails_secrets(*args, &block); end
  def set_heroku_remotes(*args, &block); end
  def set_test_delivery_method; end
  def set_up_forego; end
  def setup_asset_host; end
  def setup_bundler_audit; end
  def setup_default_directories; end
  def setup_default_rake_task; end
  def setup_rack_mini_profiler; end
  def setup_secret_token; end
  def setup_spring; end
  def use_postgres_config_template; end
  extend Forwardable
  include Suspenders::Actions
end
